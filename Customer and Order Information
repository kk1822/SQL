In this SQL, I query multible tables to find more information about customers and their orders.

#1. How many orders were placed in January? 
SELECT count(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID)=6
AND orderID<> 'Order ID';

#2. How many of those orders were for an iPhone? 
SELECT count (OrderID)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderID)=6
AND orderID<> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT customers.acctnum
FROM BIT_DB.customers AS customers
INNER JOIN BIT_DB.FebSales AS febuary
ON customers.order_id=febuary.orderID
WHERE length(febuary.orderID)=6
AND febuary.orderID<> 'Order ID'
AND customers.order_id IS NOT NULL
AND customers.order_id <>'';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT Product, MIN(Price) 
FROM BIT_DB.JanSales
WHERE length(orderID)=6
AND orderID<> 'Order ID';

#5. What is the total revenue for each product sold in January?
SELECT Product, SUM(Quantity)*Price 
AS REVENUE
FROM BIT_DB.JanSales
WHERE length(orderID)=6
AND orderID<> 'Order ID'
GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity)*Price, Quantity
FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
AND length(orderID)=6
AND orderID<> 'Order ID';

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT count(acctnum), AVG(quantity*price)
FROM BIT_DB.customers AS customers
JOIN BIT_DB.FebSales As febuary
ON customers.order_id=febuary.orderID
WHERE length(febuary.orderID)=6
AND febuary.orderID<> 'Order ID'
AND customers.order_id IS NOT NULL
AND customers.order_id <>''
AND febuary.Quantity>2;

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales 
WHERE location like '%Los Angeles%'
GROUP BY Product;

#9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT location, count (orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%New York%'
AND length(orderID)=6
AND orderID <> 'Order ID'
GROUP BY location 
HAVING count(orderID)>2;

#10. How many of each type of headphone were sold in February?
SELECT SUM (Quantity), Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones%'
GROUP BY Product;

#11. What was the average amount spent per account in February?
SELECT SUM(Quantity*Price)/count(cust.acctnum)
FROM BIT_DB.FebSales FEB
JOIN BIT_DB.customers cust
ON FEB.orderID=cust.order_id
WHERE length(orderID)=6
AND orderID <> 'Order ID'
AND order_id IS NOT 'NULL'
AND order_id<>'';

#12. What was the average quantity of products purchased per account in February?
SELECT SUM(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales FEB
JOIN BIT_DB.customers cust
ON FEB.orderID=cust.order_id
WHERE length(orderID)=6
AND orderID <> 'Order ID'
AND order_id IS NOT 'NULL'
AND order_id<>'';

#13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT SUM (Quantity*Price) AS Revenue, product
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY Revenue DESC
LIMIT 1;
